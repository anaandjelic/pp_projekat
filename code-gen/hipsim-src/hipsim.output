Grammar

    0 $accept: program $end

    1 program: variable_list code_list

    2 variable_list: ε
    3              | variable_list variable

    4 @1: ε

    5 variable: _LABEL_DEF @1 _WORD _NUMBER

    6 code_list: code_line
    7          | code_list code_line

    8 code_line: label_def
    9          | asm_line

   10 label_def: _LABEL_DEF

   11 asm_line: arithmetic
   12         | flowcontrol
   13         | stack
   14         | _HALT

   15 arithmetic: _ADD input _COMMA input _COMMA output
   16           | _SUB input _COMMA input _COMMA output
   17           | _MUL input _COMMA input _COMMA output
   18           | _DIV input _COMMA input _COMMA output
   19           | _MOV input _COMMA output
   20           | _LOAD input _COMMA output
   21           | _UNLOAD input _COMMA output

   22 flowcontrol: _CMP input _COMMA input
   23            | _JMP label
   24            | _JEQ label
   25            | _JNE label
   26            | _JGT label
   27            | _JLT label
   28            | _JGE label
   29            | _JLE label
   30            | _JC label
   31            | _JNC label
   32            | _JO label
   33            | _JNO label

   34 stack: _PUSH input
   35      | _POP output
   36      | _CALL label
   37      | _RET

   38 label: _LABEL

   39 output: _REGISTER
   40       | _NUMBER _LPAREN _REGISTER _RPAREN
   41       | _LPAREN _REGISTER _RPAREN
   42       | label

   43 input: _CONSTANT
   44      | _ADDRESS
   45      | output


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _WORD (258) 5
    _PUSH (259) 34
    _POP (260) 35
    _CALL (261) 36
    _RET (262) 37
    _CMP <i> (263) 22
    _JMP (264) 23
    _JEQ (265) 24
    _JNE (266) 25
    _JGT <i> (267) 26
    _JLT <i> (268) 27
    _JGE <i> (269) 28
    _JLE <i> (270) 29
    _JC (271) 30
    _JNC (272) 31
    _JO (273) 32
    _JNO (274) 33
    _ADD <i> (275) 15
    _SUB <i> (276) 16
    _MUL <i> (277) 17
    _DIV <i> (278) 18
    _MOV (279) 19
    _LOAD (280) 20
    _UNLOAD (281) 21
    _HALT (282) 14
    _REGISTER <i> (283) 39 40 41
    _CONSTANT <i> (284) 43
    _NUMBER <i> (285) 5 40
    _LABEL_DEF <s> (286) 5 10
    _LABEL <s> (287) 38
    _ADDRESS <s> (288) 44
    _COMMA (289) 15 16 17 18 19 20 21 22
    _LPAREN (290) 40 41
    _RPAREN (291) 40 41


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    program (38)
        on left: 1
        on right: 0
    variable_list (39)
        on left: 2 3
        on right: 1 3
    variable (40)
        on left: 5
        on right: 3
    @1 (41)
        on left: 4
        on right: 5
    code_list (42)
        on left: 6 7
        on right: 1 7
    code_line (43)
        on left: 8 9
        on right: 6 7
    label_def (44)
        on left: 10
        on right: 8
    asm_line (45)
        on left: 11 12 13 14
        on right: 9
    arithmetic (46)
        on left: 15 16 17 18 19 20 21
        on right: 11
    flowcontrol (47)
        on left: 22 23 24 25 26 27 28 29 30 31 32 33
        on right: 12
    stack (48)
        on left: 34 35 36 37
        on right: 13
    label <s> (49)
        on left: 38
        on right: 23 24 25 26 27 28 29 30 31 32 33 36 42
    output <s> (50)
        on left: 39 40 41 42
        on right: 15 16 17 18 19 20 21 35 45
    input <s> (51)
        on left: 43 44 45
        on right: 15 16 17 18 19 20 21 22 34


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (variable_list)

    program        go to state 1
    variable_list  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: variable_list • code_list
    3 variable_list: variable_list • variable

    _PUSH       shift, and go to state 4
    _POP        shift, and go to state 5
    _CALL       shift, and go to state 6
    _RET        shift, and go to state 7
    _CMP        shift, and go to state 8
    _JMP        shift, and go to state 9
    _JEQ        shift, and go to state 10
    _JNE        shift, and go to state 11
    _JGT        shift, and go to state 12
    _JLT        shift, and go to state 13
    _JGE        shift, and go to state 14
    _JLE        shift, and go to state 15
    _JC         shift, and go to state 16
    _JNC        shift, and go to state 17
    _JO         shift, and go to state 18
    _JNO        shift, and go to state 19
    _ADD        shift, and go to state 20
    _SUB        shift, and go to state 21
    _MUL        shift, and go to state 22
    _DIV        shift, and go to state 23
    _MOV        shift, and go to state 24
    _LOAD       shift, and go to state 25
    _UNLOAD     shift, and go to state 26
    _HALT       shift, and go to state 27
    _LABEL_DEF  shift, and go to state 28

    variable     go to state 29
    code_list    go to state 30
    code_line    go to state 31
    label_def    go to state 32
    asm_line     go to state 33
    arithmetic   go to state 34
    flowcontrol  go to state 35
    stack        go to state 36


State 3

    0 $accept: program $end •

    $default  accept


State 4

   34 stack: _PUSH • input

    _REGISTER  shift, and go to state 37
    _CONSTANT  shift, and go to state 38
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _ADDRESS   shift, and go to state 41
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 44
    input   go to state 45


State 5

   35 stack: _POP • output

    _REGISTER  shift, and go to state 37
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 46


State 6

   36 stack: _CALL • label

    _LABEL  shift, and go to state 40

    label  go to state 47


State 7

   37 stack: _RET •

    $default  reduce using rule 37 (stack)


State 8

   22 flowcontrol: _CMP • input _COMMA input

    _REGISTER  shift, and go to state 37
    _CONSTANT  shift, and go to state 38
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _ADDRESS   shift, and go to state 41
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 44
    input   go to state 48


State 9

   23 flowcontrol: _JMP • label

    _LABEL  shift, and go to state 40

    label  go to state 49


State 10

   24 flowcontrol: _JEQ • label

    _LABEL  shift, and go to state 40

    label  go to state 50


State 11

   25 flowcontrol: _JNE • label

    _LABEL  shift, and go to state 40

    label  go to state 51


State 12

   26 flowcontrol: _JGT • label

    _LABEL  shift, and go to state 40

    label  go to state 52


State 13

   27 flowcontrol: _JLT • label

    _LABEL  shift, and go to state 40

    label  go to state 53


State 14

   28 flowcontrol: _JGE • label

    _LABEL  shift, and go to state 40

    label  go to state 54


State 15

   29 flowcontrol: _JLE • label

    _LABEL  shift, and go to state 40

    label  go to state 55


State 16

   30 flowcontrol: _JC • label

    _LABEL  shift, and go to state 40

    label  go to state 56


State 17

   31 flowcontrol: _JNC • label

    _LABEL  shift, and go to state 40

    label  go to state 57


State 18

   32 flowcontrol: _JO • label

    _LABEL  shift, and go to state 40

    label  go to state 58


State 19

   33 flowcontrol: _JNO • label

    _LABEL  shift, and go to state 40

    label  go to state 59


State 20

   15 arithmetic: _ADD • input _COMMA input _COMMA output

    _REGISTER  shift, and go to state 37
    _CONSTANT  shift, and go to state 38
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _ADDRESS   shift, and go to state 41
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 44
    input   go to state 60


State 21

   16 arithmetic: _SUB • input _COMMA input _COMMA output

    _REGISTER  shift, and go to state 37
    _CONSTANT  shift, and go to state 38
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _ADDRESS   shift, and go to state 41
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 44
    input   go to state 61


State 22

   17 arithmetic: _MUL • input _COMMA input _COMMA output

    _REGISTER  shift, and go to state 37
    _CONSTANT  shift, and go to state 38
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _ADDRESS   shift, and go to state 41
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 44
    input   go to state 62


State 23

   18 arithmetic: _DIV • input _COMMA input _COMMA output

    _REGISTER  shift, and go to state 37
    _CONSTANT  shift, and go to state 38
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _ADDRESS   shift, and go to state 41
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 44
    input   go to state 63


State 24

   19 arithmetic: _MOV • input _COMMA output

    _REGISTER  shift, and go to state 37
    _CONSTANT  shift, and go to state 38
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _ADDRESS   shift, and go to state 41
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 44
    input   go to state 64


State 25

   20 arithmetic: _LOAD • input _COMMA output

    _REGISTER  shift, and go to state 37
    _CONSTANT  shift, and go to state 38
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _ADDRESS   shift, and go to state 41
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 44
    input   go to state 65


State 26

   21 arithmetic: _UNLOAD • input _COMMA output

    _REGISTER  shift, and go to state 37
    _CONSTANT  shift, and go to state 38
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _ADDRESS   shift, and go to state 41
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 44
    input   go to state 66


State 27

   14 asm_line: _HALT •

    $default  reduce using rule 14 (asm_line)


State 28

    5 variable: _LABEL_DEF • @1 _WORD _NUMBER
   10 label_def: _LABEL_DEF •

    _WORD     reduce using rule 4 (@1)
    $default  reduce using rule 10 (label_def)

    @1  go to state 67


State 29

    3 variable_list: variable_list variable •

    $default  reduce using rule 3 (variable_list)


State 30

    1 program: variable_list code_list •
    7 code_list: code_list • code_line

    _PUSH       shift, and go to state 4
    _POP        shift, and go to state 5
    _CALL       shift, and go to state 6
    _RET        shift, and go to state 7
    _CMP        shift, and go to state 8
    _JMP        shift, and go to state 9
    _JEQ        shift, and go to state 10
    _JNE        shift, and go to state 11
    _JGT        shift, and go to state 12
    _JLT        shift, and go to state 13
    _JGE        shift, and go to state 14
    _JLE        shift, and go to state 15
    _JC         shift, and go to state 16
    _JNC        shift, and go to state 17
    _JO         shift, and go to state 18
    _JNO        shift, and go to state 19
    _ADD        shift, and go to state 20
    _SUB        shift, and go to state 21
    _MUL        shift, and go to state 22
    _DIV        shift, and go to state 23
    _MOV        shift, and go to state 24
    _LOAD       shift, and go to state 25
    _UNLOAD     shift, and go to state 26
    _HALT       shift, and go to state 27
    _LABEL_DEF  shift, and go to state 68

    $default  reduce using rule 1 (program)

    code_line    go to state 69
    label_def    go to state 32
    asm_line     go to state 33
    arithmetic   go to state 34
    flowcontrol  go to state 35
    stack        go to state 36


State 31

    6 code_list: code_line •

    $default  reduce using rule 6 (code_list)


State 32

    8 code_line: label_def •

    $default  reduce using rule 8 (code_line)


State 33

    9 code_line: asm_line •

    $default  reduce using rule 9 (code_line)


State 34

   11 asm_line: arithmetic •

    $default  reduce using rule 11 (asm_line)


State 35

   12 asm_line: flowcontrol •

    $default  reduce using rule 12 (asm_line)


State 36

   13 asm_line: stack •

    $default  reduce using rule 13 (asm_line)


State 37

   39 output: _REGISTER •

    $default  reduce using rule 39 (output)


State 38

   43 input: _CONSTANT •

    $default  reduce using rule 43 (input)


State 39

   40 output: _NUMBER • _LPAREN _REGISTER _RPAREN

    _LPAREN  shift, and go to state 70


State 40

   38 label: _LABEL •

    $default  reduce using rule 38 (label)


State 41

   44 input: _ADDRESS •

    $default  reduce using rule 44 (input)


State 42

   41 output: _LPAREN • _REGISTER _RPAREN

    _REGISTER  shift, and go to state 71


State 43

   42 output: label •

    $default  reduce using rule 42 (output)


State 44

   45 input: output •

    $default  reduce using rule 45 (input)


State 45

   34 stack: _PUSH input •

    $default  reduce using rule 34 (stack)


State 46

   35 stack: _POP output •

    $default  reduce using rule 35 (stack)


State 47

   36 stack: _CALL label •

    $default  reduce using rule 36 (stack)


State 48

   22 flowcontrol: _CMP input • _COMMA input

    _COMMA  shift, and go to state 72


State 49

   23 flowcontrol: _JMP label •

    $default  reduce using rule 23 (flowcontrol)


State 50

   24 flowcontrol: _JEQ label •

    $default  reduce using rule 24 (flowcontrol)


State 51

   25 flowcontrol: _JNE label •

    $default  reduce using rule 25 (flowcontrol)


State 52

   26 flowcontrol: _JGT label •

    $default  reduce using rule 26 (flowcontrol)


State 53

   27 flowcontrol: _JLT label •

    $default  reduce using rule 27 (flowcontrol)


State 54

   28 flowcontrol: _JGE label •

    $default  reduce using rule 28 (flowcontrol)


State 55

   29 flowcontrol: _JLE label •

    $default  reduce using rule 29 (flowcontrol)


State 56

   30 flowcontrol: _JC label •

    $default  reduce using rule 30 (flowcontrol)


State 57

   31 flowcontrol: _JNC label •

    $default  reduce using rule 31 (flowcontrol)


State 58

   32 flowcontrol: _JO label •

    $default  reduce using rule 32 (flowcontrol)


State 59

   33 flowcontrol: _JNO label •

    $default  reduce using rule 33 (flowcontrol)


State 60

   15 arithmetic: _ADD input • _COMMA input _COMMA output

    _COMMA  shift, and go to state 73


State 61

   16 arithmetic: _SUB input • _COMMA input _COMMA output

    _COMMA  shift, and go to state 74


State 62

   17 arithmetic: _MUL input • _COMMA input _COMMA output

    _COMMA  shift, and go to state 75


State 63

   18 arithmetic: _DIV input • _COMMA input _COMMA output

    _COMMA  shift, and go to state 76


State 64

   19 arithmetic: _MOV input • _COMMA output

    _COMMA  shift, and go to state 77


State 65

   20 arithmetic: _LOAD input • _COMMA output

    _COMMA  shift, and go to state 78


State 66

   21 arithmetic: _UNLOAD input • _COMMA output

    _COMMA  shift, and go to state 79


State 67

    5 variable: _LABEL_DEF @1 • _WORD _NUMBER

    _WORD  shift, and go to state 80


State 68

   10 label_def: _LABEL_DEF •

    $default  reduce using rule 10 (label_def)


State 69

    7 code_list: code_list code_line •

    $default  reduce using rule 7 (code_list)


State 70

   40 output: _NUMBER _LPAREN • _REGISTER _RPAREN

    _REGISTER  shift, and go to state 81


State 71

   41 output: _LPAREN _REGISTER • _RPAREN

    _RPAREN  shift, and go to state 82


State 72

   22 flowcontrol: _CMP input _COMMA • input

    _REGISTER  shift, and go to state 37
    _CONSTANT  shift, and go to state 38
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _ADDRESS   shift, and go to state 41
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 44
    input   go to state 83


State 73

   15 arithmetic: _ADD input _COMMA • input _COMMA output

    _REGISTER  shift, and go to state 37
    _CONSTANT  shift, and go to state 38
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _ADDRESS   shift, and go to state 41
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 44
    input   go to state 84


State 74

   16 arithmetic: _SUB input _COMMA • input _COMMA output

    _REGISTER  shift, and go to state 37
    _CONSTANT  shift, and go to state 38
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _ADDRESS   shift, and go to state 41
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 44
    input   go to state 85


State 75

   17 arithmetic: _MUL input _COMMA • input _COMMA output

    _REGISTER  shift, and go to state 37
    _CONSTANT  shift, and go to state 38
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _ADDRESS   shift, and go to state 41
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 44
    input   go to state 86


State 76

   18 arithmetic: _DIV input _COMMA • input _COMMA output

    _REGISTER  shift, and go to state 37
    _CONSTANT  shift, and go to state 38
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _ADDRESS   shift, and go to state 41
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 44
    input   go to state 87


State 77

   19 arithmetic: _MOV input _COMMA • output

    _REGISTER  shift, and go to state 37
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 88


State 78

   20 arithmetic: _LOAD input _COMMA • output

    _REGISTER  shift, and go to state 37
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 89


State 79

   21 arithmetic: _UNLOAD input _COMMA • output

    _REGISTER  shift, and go to state 37
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 90


State 80

    5 variable: _LABEL_DEF @1 _WORD • _NUMBER

    _NUMBER  shift, and go to state 91


State 81

   40 output: _NUMBER _LPAREN _REGISTER • _RPAREN

    _RPAREN  shift, and go to state 92


State 82

   41 output: _LPAREN _REGISTER _RPAREN •

    $default  reduce using rule 41 (output)


State 83

   22 flowcontrol: _CMP input _COMMA input •

    $default  reduce using rule 22 (flowcontrol)


State 84

   15 arithmetic: _ADD input _COMMA input • _COMMA output

    _COMMA  shift, and go to state 93


State 85

   16 arithmetic: _SUB input _COMMA input • _COMMA output

    _COMMA  shift, and go to state 94


State 86

   17 arithmetic: _MUL input _COMMA input • _COMMA output

    _COMMA  shift, and go to state 95


State 87

   18 arithmetic: _DIV input _COMMA input • _COMMA output

    _COMMA  shift, and go to state 96


State 88

   19 arithmetic: _MOV input _COMMA output •

    $default  reduce using rule 19 (arithmetic)


State 89

   20 arithmetic: _LOAD input _COMMA output •

    $default  reduce using rule 20 (arithmetic)


State 90

   21 arithmetic: _UNLOAD input _COMMA output •

    $default  reduce using rule 21 (arithmetic)


State 91

    5 variable: _LABEL_DEF @1 _WORD _NUMBER •

    $default  reduce using rule 5 (variable)


State 92

   40 output: _NUMBER _LPAREN _REGISTER _RPAREN •

    $default  reduce using rule 40 (output)


State 93

   15 arithmetic: _ADD input _COMMA input _COMMA • output

    _REGISTER  shift, and go to state 37
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 97


State 94

   16 arithmetic: _SUB input _COMMA input _COMMA • output

    _REGISTER  shift, and go to state 37
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 98


State 95

   17 arithmetic: _MUL input _COMMA input _COMMA • output

    _REGISTER  shift, and go to state 37
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 99


State 96

   18 arithmetic: _DIV input _COMMA input _COMMA • output

    _REGISTER  shift, and go to state 37
    _NUMBER    shift, and go to state 39
    _LABEL     shift, and go to state 40
    _LPAREN    shift, and go to state 42

    label   go to state 43
    output  go to state 100


State 97

   15 arithmetic: _ADD input _COMMA input _COMMA output •

    $default  reduce using rule 15 (arithmetic)


State 98

   16 arithmetic: _SUB input _COMMA input _COMMA output •

    $default  reduce using rule 16 (arithmetic)


State 99

   17 arithmetic: _MUL input _COMMA input _COMMA output •

    $default  reduce using rule 17 (arithmetic)


State 100

   18 arithmetic: _DIV input _COMMA input _COMMA output •

    $default  reduce using rule 18 (arithmetic)
