Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: ε

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: ε
    7          | _TYPE _ID

    8 $@2: ε

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   10 variable_list: ε
   11              | variable_list variable

   12 variable: _TYPE _ID _SEMICOLON
   13         | _TYPE _LSB literal _RSB _ID _SEMICOLON

   14 $@3: ε

   15 variable: _TYPE _LSB literal _RSB _ID _ASSIGN _LBRACKET $@3 literal_list _RBRACKET _SEMICOLON

   16 literal_list: literal
   17             | literal_list _COMMA literal

   18 statement_list: ε
   19               | statement_list statement

   20 statement: compound_statement
   21          | assignment_statement
   22          | if_statement
   23          | return_statement
   24          | for_statement

   25 @4: ε

   26 $@5: ε

   27 $@6: ε

   28 for_statement: _FOR @4 _LPAREN _ID _ASSIGN literal $@5 _SEMICOLON rel_exp $@6 _SEMICOLON _ID _INC _RPAREN statement

   29 compound_statement: _LBRACKET statement_list _RBRACKET

   30 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON
   31                     | _ID _LSB literal _RSB _ASSIGN num_exp _SEMICOLON

   32 num_exp: exp
   33        | num_exp _AROP exp

   34 exp: literal
   35    | _ID
   36    | _ID _LSB literal _RSB
   37    | _AMPERSAND _ID
   38    | _ASTERISK _ID
   39    | function_call
   40    | _LPAREN num_exp _RPAREN

   41 literal: _INT_NUMBER
   42        | _UINT_NUMBER

   43 $@7: ε

   44 function_call: _ID $@7 _LPAREN argument _RPAREN

   45 argument: ε
   46         | num_exp

   47 if_statement: if_part
   48             | if_part _ELSE statement

   49 @8: ε

   50 $@9: ε

   51 if_part: _IF _LPAREN @8 rel_exp $@9 _RPAREN statement

   52 rel_exp: num_exp _RELOP num_exp

   53 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 5 7 12 13 15
    _IF (259) 51
    _ELSE (260) 48
    _FOR (261) 28
    _INC <i> (262) 28
    _RETURN (263) 53
    _ID <s> (264) 5 7 12 13 15 28 30 31 35 36 37 38 44
    _INT_NUMBER <s> (265) 41
    _UINT_NUMBER <s> (266) 42
    _LPAREN (267) 5 28 40 44 51
    _RPAREN (268) 5 28 40 44 51
    _LBRACKET (269) 9 15 29
    _RBRACKET (270) 9 15 29
    _ASSIGN (271) 15 28 30 31
    _SEMICOLON (272) 12 13 15 28 30 31 53
    _AROP <i> (273) 33
    _RELOP <i> (274) 52
    ONLY_IF (275)
    _LSB (276) 13 15 31 36
    _RSB (277) 13 15 31 36
    _COMMA (278) 17
    _AMPERSAND (279) 37
    _ASTERISK (280) 38


Nonterminals, with rules where they appear

    $accept (26)
        on left: 0
    program (27)
        on left: 1
        on right: 0
    function_list (28)
        on left: 2 3
        on right: 1 3
    function (29)
        on left: 5
        on right: 2 3
    $@1 (30)
        on left: 4
        on right: 5
    parameter (31)
        on left: 6 7
        on right: 5
    body (32)
        on left: 9
        on right: 5
    $@2 (33)
        on left: 8
        on right: 9
    variable_list (34)
        on left: 10 11
        on right: 9 11
    variable (35)
        on left: 12 13 15
        on right: 11
    $@3 (36)
        on left: 14
        on right: 15
    literal_list (37)
        on left: 16 17
        on right: 15 17
    statement_list (38)
        on left: 18 19
        on right: 9 19 29
    statement (39)
        on left: 20 21 22 23 24
        on right: 19 28 48 51
    for_statement (40)
        on left: 28
        on right: 24
    @4 (41)
        on left: 25
        on right: 28
    $@5 (42)
        on left: 26
        on right: 28
    $@6 (43)
        on left: 27
        on right: 28
    compound_statement (44)
        on left: 29
        on right: 20
    assignment_statement (45)
        on left: 30 31
        on right: 21
    num_exp <i> (46)
        on left: 32 33
        on right: 30 31 33 40 46 52 53
    exp <i> (47)
        on left: 34 35 36 37 38 39 40
        on right: 32 33
    literal <i> (48)
        on left: 41 42
        on right: 13 15 16 17 28 31 34 36
    function_call <i> (49)
        on left: 44
        on right: 39
    $@7 (50)
        on left: 43
        on right: 44
    argument <i> (51)
        on left: 45 46
        on right: 44
    if_statement (52)
        on left: 47 48
        on right: 22
    if_part <i> (53)
        on left: 51
        on right: 47 48
    @8 (54)
        on left: 49
        on right: 51
    $@9 (55)
        on left: 50
        on right: 51
    rel_exp <i> (56)
        on left: 52
        on right: 28 51
    return_statement (57)
        on left: 53
        on right: 23


State 0

    0 $accept: • program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE • _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program • $end

    $end  shift, and go to state 6


State 3

    1 program: function_list •
    3 function_list: function_list • function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function •

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID • $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end •

    $default  accept


State 7

    3 function_list: function_list function •

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 • _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN • parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE • _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter • _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID •

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN • body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    9 body: _LBRACKET • variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 10 (variable_list)

    variable_list  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body •

    $default  reduce using rule 5 (function)


State 16

    9 body: _LBRACKET variable_list • $@2 statement_list _RBRACKET
   11 variable_list: variable_list • variable

    _TYPE  shift, and go to state 17

    $default  reduce using rule 8 ($@2)

    $@2       go to state 18
    variable  go to state 19


State 17

   12 variable: _TYPE • _ID _SEMICOLON
   13         | _TYPE • _LSB literal _RSB _ID _SEMICOLON
   15         | _TYPE • _LSB literal _RSB _ID _ASSIGN _LBRACKET $@3 literal_list _RBRACKET _SEMICOLON

    _ID   shift, and go to state 20
    _LSB  shift, and go to state 21


State 18

    9 body: _LBRACKET variable_list $@2 • statement_list _RBRACKET

    $default  reduce using rule 18 (statement_list)

    statement_list  go to state 22


State 19

   11 variable_list: variable_list variable •

    $default  reduce using rule 11 (variable_list)


State 20

   12 variable: _TYPE _ID • _SEMICOLON

    _SEMICOLON  shift, and go to state 23


State 21

   13 variable: _TYPE _LSB • literal _RSB _ID _SEMICOLON
   15         | _TYPE _LSB • literal _RSB _ID _ASSIGN _LBRACKET $@3 literal_list _RBRACKET _SEMICOLON

    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25

    literal  go to state 26


State 22

    9 body: _LBRACKET variable_list $@2 statement_list • _RBRACKET
   19 statement_list: statement_list • statement

    _IF        shift, and go to state 27
    _FOR       shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _RBRACKET  shift, and go to state 32

    statement             go to state 33
    for_statement         go to state 34
    compound_statement    go to state 35
    assignment_statement  go to state 36
    if_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 23

   12 variable: _TYPE _ID _SEMICOLON •

    $default  reduce using rule 12 (variable)


State 24

   41 literal: _INT_NUMBER •

    $default  reduce using rule 41 (literal)


State 25

   42 literal: _UINT_NUMBER •

    $default  reduce using rule 42 (literal)


State 26

   13 variable: _TYPE _LSB literal • _RSB _ID _SEMICOLON
   15         | _TYPE _LSB literal • _RSB _ID _ASSIGN _LBRACKET $@3 literal_list _RBRACKET _SEMICOLON

    _RSB  shift, and go to state 40


State 27

   51 if_part: _IF • _LPAREN @8 rel_exp $@9 _RPAREN statement

    _LPAREN  shift, and go to state 41


State 28

   28 for_statement: _FOR • @4 _LPAREN _ID _ASSIGN literal $@5 _SEMICOLON rel_exp $@6 _SEMICOLON _ID _INC _RPAREN statement

    $default  reduce using rule 25 (@4)

    @4  go to state 42


State 29

   53 return_statement: _RETURN • num_exp _SEMICOLON

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25
    _LPAREN       shift, and go to state 44
    _AMPERSAND    shift, and go to state 45
    _ASTERISK     shift, and go to state 46

    num_exp        go to state 47
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50


State 30

   30 assignment_statement: _ID • _ASSIGN num_exp _SEMICOLON
   31                     | _ID • _LSB literal _RSB _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 51
    _LSB     shift, and go to state 52


State 31

   29 compound_statement: _LBRACKET • statement_list _RBRACKET

    $default  reduce using rule 18 (statement_list)

    statement_list  go to state 53


State 32

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET •

    $default  reduce using rule 9 (body)


State 33

   19 statement_list: statement_list statement •

    $default  reduce using rule 19 (statement_list)


State 34

   24 statement: for_statement •

    $default  reduce using rule 24 (statement)


State 35

   20 statement: compound_statement •

    $default  reduce using rule 20 (statement)


State 36

   21 statement: assignment_statement •

    $default  reduce using rule 21 (statement)


State 37

   22 statement: if_statement •

    $default  reduce using rule 22 (statement)


State 38

   47 if_statement: if_part •
   48             | if_part • _ELSE statement

    _ELSE  shift, and go to state 54

    $default  reduce using rule 47 (if_statement)


State 39

   23 statement: return_statement •

    $default  reduce using rule 23 (statement)


State 40

   13 variable: _TYPE _LSB literal _RSB • _ID _SEMICOLON
   15         | _TYPE _LSB literal _RSB • _ID _ASSIGN _LBRACKET $@3 literal_list _RBRACKET _SEMICOLON

    _ID  shift, and go to state 55


State 41

   51 if_part: _IF _LPAREN • @8 rel_exp $@9 _RPAREN statement

    $default  reduce using rule 49 (@8)

    @8  go to state 56


State 42

   28 for_statement: _FOR @4 • _LPAREN _ID _ASSIGN literal $@5 _SEMICOLON rel_exp $@6 _SEMICOLON _ID _INC _RPAREN statement

    _LPAREN  shift, and go to state 57


State 43

   35 exp: _ID •
   36    | _ID • _LSB literal _RSB
   44 function_call: _ID • $@7 _LPAREN argument _RPAREN

    _LSB  shift, and go to state 58

    _LPAREN   reduce using rule 43 ($@7)
    $default  reduce using rule 35 (exp)

    $@7  go to state 59


State 44

   40 exp: _LPAREN • num_exp _RPAREN

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25
    _LPAREN       shift, and go to state 44
    _AMPERSAND    shift, and go to state 45
    _ASTERISK     shift, and go to state 46

    num_exp        go to state 60
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50


State 45

   37 exp: _AMPERSAND • _ID

    _ID  shift, and go to state 61


State 46

   38 exp: _ASTERISK • _ID

    _ID  shift, and go to state 62


State 47

   33 num_exp: num_exp • _AROP exp
   53 return_statement: _RETURN num_exp • _SEMICOLON

    _SEMICOLON  shift, and go to state 63
    _AROP       shift, and go to state 64


State 48

   32 num_exp: exp •

    $default  reduce using rule 32 (num_exp)


State 49

   34 exp: literal •

    $default  reduce using rule 34 (exp)


State 50

   39 exp: function_call •

    $default  reduce using rule 39 (exp)


State 51

   30 assignment_statement: _ID _ASSIGN • num_exp _SEMICOLON

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25
    _LPAREN       shift, and go to state 44
    _AMPERSAND    shift, and go to state 45
    _ASTERISK     shift, and go to state 46

    num_exp        go to state 65
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50


State 52

   31 assignment_statement: _ID _LSB • literal _RSB _ASSIGN num_exp _SEMICOLON

    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25

    literal  go to state 66


State 53

   19 statement_list: statement_list • statement
   29 compound_statement: _LBRACKET statement_list • _RBRACKET

    _IF        shift, and go to state 27
    _FOR       shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _RBRACKET  shift, and go to state 67

    statement             go to state 33
    for_statement         go to state 34
    compound_statement    go to state 35
    assignment_statement  go to state 36
    if_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 54

   48 if_statement: if_part _ELSE • statement

    _IF        shift, and go to state 27
    _FOR       shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31

    statement             go to state 68
    for_statement         go to state 34
    compound_statement    go to state 35
    assignment_statement  go to state 36
    if_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 55

   13 variable: _TYPE _LSB literal _RSB _ID • _SEMICOLON
   15         | _TYPE _LSB literal _RSB _ID • _ASSIGN _LBRACKET $@3 literal_list _RBRACKET _SEMICOLON

    _ASSIGN     shift, and go to state 69
    _SEMICOLON  shift, and go to state 70


State 56

   51 if_part: _IF _LPAREN @8 • rel_exp $@9 _RPAREN statement

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25
    _LPAREN       shift, and go to state 44
    _AMPERSAND    shift, and go to state 45
    _ASTERISK     shift, and go to state 46

    num_exp        go to state 71
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50
    rel_exp        go to state 72


State 57

   28 for_statement: _FOR @4 _LPAREN • _ID _ASSIGN literal $@5 _SEMICOLON rel_exp $@6 _SEMICOLON _ID _INC _RPAREN statement

    _ID  shift, and go to state 73


State 58

   36 exp: _ID _LSB • literal _RSB

    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25

    literal  go to state 74


State 59

   44 function_call: _ID $@7 • _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 75


State 60

   33 num_exp: num_exp • _AROP exp
   40 exp: _LPAREN num_exp • _RPAREN

    _RPAREN  shift, and go to state 76
    _AROP    shift, and go to state 64


State 61

   37 exp: _AMPERSAND _ID •

    $default  reduce using rule 37 (exp)


State 62

   38 exp: _ASTERISK _ID •

    $default  reduce using rule 38 (exp)


State 63

   53 return_statement: _RETURN num_exp _SEMICOLON •

    $default  reduce using rule 53 (return_statement)


State 64

   33 num_exp: num_exp _AROP • exp

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25
    _LPAREN       shift, and go to state 44
    _AMPERSAND    shift, and go to state 45
    _ASTERISK     shift, and go to state 46

    exp            go to state 77
    literal        go to state 49
    function_call  go to state 50


State 65

   30 assignment_statement: _ID _ASSIGN num_exp • _SEMICOLON
   33 num_exp: num_exp • _AROP exp

    _SEMICOLON  shift, and go to state 78
    _AROP       shift, and go to state 64


State 66

   31 assignment_statement: _ID _LSB literal • _RSB _ASSIGN num_exp _SEMICOLON

    _RSB  shift, and go to state 79


State 67

   29 compound_statement: _LBRACKET statement_list _RBRACKET •

    $default  reduce using rule 29 (compound_statement)


State 68

   48 if_statement: if_part _ELSE statement •

    $default  reduce using rule 48 (if_statement)


State 69

   15 variable: _TYPE _LSB literal _RSB _ID _ASSIGN • _LBRACKET $@3 literal_list _RBRACKET _SEMICOLON

    _LBRACKET  shift, and go to state 80


State 70

   13 variable: _TYPE _LSB literal _RSB _ID _SEMICOLON •

    $default  reduce using rule 13 (variable)


State 71

   33 num_exp: num_exp • _AROP exp
   52 rel_exp: num_exp • _RELOP num_exp

    _AROP   shift, and go to state 64
    _RELOP  shift, and go to state 81


State 72

   51 if_part: _IF _LPAREN @8 rel_exp • $@9 _RPAREN statement

    $default  reduce using rule 50 ($@9)

    $@9  go to state 82


State 73

   28 for_statement: _FOR @4 _LPAREN _ID • _ASSIGN literal $@5 _SEMICOLON rel_exp $@6 _SEMICOLON _ID _INC _RPAREN statement

    _ASSIGN  shift, and go to state 83


State 74

   36 exp: _ID _LSB literal • _RSB

    _RSB  shift, and go to state 84


State 75

   44 function_call: _ID $@7 _LPAREN • argument _RPAREN

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25
    _LPAREN       shift, and go to state 44
    _AMPERSAND    shift, and go to state 45
    _ASTERISK     shift, and go to state 46

    $default  reduce using rule 45 (argument)

    num_exp        go to state 85
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50
    argument       go to state 86


State 76

   40 exp: _LPAREN num_exp _RPAREN •

    $default  reduce using rule 40 (exp)


State 77

   33 num_exp: num_exp _AROP exp •

    $default  reduce using rule 33 (num_exp)


State 78

   30 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON •

    $default  reduce using rule 30 (assignment_statement)


State 79

   31 assignment_statement: _ID _LSB literal _RSB • _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 87


State 80

   15 variable: _TYPE _LSB literal _RSB _ID _ASSIGN _LBRACKET • $@3 literal_list _RBRACKET _SEMICOLON

    $default  reduce using rule 14 ($@3)

    $@3  go to state 88


State 81

   52 rel_exp: num_exp _RELOP • num_exp

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25
    _LPAREN       shift, and go to state 44
    _AMPERSAND    shift, and go to state 45
    _ASTERISK     shift, and go to state 46

    num_exp        go to state 89
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50


State 82

   51 if_part: _IF _LPAREN @8 rel_exp $@9 • _RPAREN statement

    _RPAREN  shift, and go to state 90


State 83

   28 for_statement: _FOR @4 _LPAREN _ID _ASSIGN • literal $@5 _SEMICOLON rel_exp $@6 _SEMICOLON _ID _INC _RPAREN statement

    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25

    literal  go to state 91


State 84

   36 exp: _ID _LSB literal _RSB •

    $default  reduce using rule 36 (exp)


State 85

   33 num_exp: num_exp • _AROP exp
   46 argument: num_exp •

    _AROP  shift, and go to state 64

    $default  reduce using rule 46 (argument)


State 86

   44 function_call: _ID $@7 _LPAREN argument • _RPAREN

    _RPAREN  shift, and go to state 92


State 87

   31 assignment_statement: _ID _LSB literal _RSB _ASSIGN • num_exp _SEMICOLON

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25
    _LPAREN       shift, and go to state 44
    _AMPERSAND    shift, and go to state 45
    _ASTERISK     shift, and go to state 46

    num_exp        go to state 93
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50


State 88

   15 variable: _TYPE _LSB literal _RSB _ID _ASSIGN _LBRACKET $@3 • literal_list _RBRACKET _SEMICOLON

    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25

    literal_list  go to state 94
    literal       go to state 95


State 89

   33 num_exp: num_exp • _AROP exp
   52 rel_exp: num_exp _RELOP num_exp •

    _AROP  shift, and go to state 64

    $default  reduce using rule 52 (rel_exp)


State 90

   51 if_part: _IF _LPAREN @8 rel_exp $@9 _RPAREN • statement

    _IF        shift, and go to state 27
    _FOR       shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31

    statement             go to state 96
    for_statement         go to state 34
    compound_statement    go to state 35
    assignment_statement  go to state 36
    if_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 91

   28 for_statement: _FOR @4 _LPAREN _ID _ASSIGN literal • $@5 _SEMICOLON rel_exp $@6 _SEMICOLON _ID _INC _RPAREN statement

    $default  reduce using rule 26 ($@5)

    $@5  go to state 97


State 92

   44 function_call: _ID $@7 _LPAREN argument _RPAREN •

    $default  reduce using rule 44 (function_call)


State 93

   31 assignment_statement: _ID _LSB literal _RSB _ASSIGN num_exp • _SEMICOLON
   33 num_exp: num_exp • _AROP exp

    _SEMICOLON  shift, and go to state 98
    _AROP       shift, and go to state 64


State 94

   15 variable: _TYPE _LSB literal _RSB _ID _ASSIGN _LBRACKET $@3 literal_list • _RBRACKET _SEMICOLON
   17 literal_list: literal_list • _COMMA literal

    _RBRACKET  shift, and go to state 99
    _COMMA     shift, and go to state 100


State 95

   16 literal_list: literal •

    $default  reduce using rule 16 (literal_list)


State 96

   51 if_part: _IF _LPAREN @8 rel_exp $@9 _RPAREN statement •

    $default  reduce using rule 51 (if_part)


State 97

   28 for_statement: _FOR @4 _LPAREN _ID _ASSIGN literal $@5 • _SEMICOLON rel_exp $@6 _SEMICOLON _ID _INC _RPAREN statement

    _SEMICOLON  shift, and go to state 101


State 98

   31 assignment_statement: _ID _LSB literal _RSB _ASSIGN num_exp _SEMICOLON •

    $default  reduce using rule 31 (assignment_statement)


State 99

   15 variable: _TYPE _LSB literal _RSB _ID _ASSIGN _LBRACKET $@3 literal_list _RBRACKET • _SEMICOLON

    _SEMICOLON  shift, and go to state 102


State 100

   17 literal_list: literal_list _COMMA • literal

    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25

    literal  go to state 103


State 101

   28 for_statement: _FOR @4 _LPAREN _ID _ASSIGN literal $@5 _SEMICOLON • rel_exp $@6 _SEMICOLON _ID _INC _RPAREN statement

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25
    _LPAREN       shift, and go to state 44
    _AMPERSAND    shift, and go to state 45
    _ASTERISK     shift, and go to state 46

    num_exp        go to state 71
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50
    rel_exp        go to state 104


State 102

   15 variable: _TYPE _LSB literal _RSB _ID _ASSIGN _LBRACKET $@3 literal_list _RBRACKET _SEMICOLON •

    $default  reduce using rule 15 (variable)


State 103

   17 literal_list: literal_list _COMMA literal •

    $default  reduce using rule 17 (literal_list)


State 104

   28 for_statement: _FOR @4 _LPAREN _ID _ASSIGN literal $@5 _SEMICOLON rel_exp • $@6 _SEMICOLON _ID _INC _RPAREN statement

    $default  reduce using rule 27 ($@6)

    $@6  go to state 105


State 105

   28 for_statement: _FOR @4 _LPAREN _ID _ASSIGN literal $@5 _SEMICOLON rel_exp $@6 • _SEMICOLON _ID _INC _RPAREN statement

    _SEMICOLON  shift, and go to state 106


State 106

   28 for_statement: _FOR @4 _LPAREN _ID _ASSIGN literal $@5 _SEMICOLON rel_exp $@6 _SEMICOLON • _ID _INC _RPAREN statement

    _ID  shift, and go to state 107


State 107

   28 for_statement: _FOR @4 _LPAREN _ID _ASSIGN literal $@5 _SEMICOLON rel_exp $@6 _SEMICOLON _ID • _INC _RPAREN statement

    _INC  shift, and go to state 108


State 108

   28 for_statement: _FOR @4 _LPAREN _ID _ASSIGN literal $@5 _SEMICOLON rel_exp $@6 _SEMICOLON _ID _INC • _RPAREN statement

    _RPAREN  shift, and go to state 109


State 109

   28 for_statement: _FOR @4 _LPAREN _ID _ASSIGN literal $@5 _SEMICOLON rel_exp $@6 _SEMICOLON _ID _INC _RPAREN • statement

    _IF        shift, and go to state 27
    _FOR       shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31

    statement             go to state 110
    for_statement         go to state 34
    compound_statement    go to state 35
    assignment_statement  go to state 36
    if_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 110

   28 for_statement: _FOR @4 _LPAREN _ID _ASSIGN literal $@5 _SEMICOLON rel_exp $@6 _SEMICOLON _ID _INC _RPAREN statement •

    $default  reduce using rule 28 (for_statement)
