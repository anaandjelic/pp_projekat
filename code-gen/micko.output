Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: ε

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: ε
    7          | _TYPE _ID

    8 $@2: ε

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   10 variable_list: ε
   11              | variable_list variable

   12 variable: _TYPE _ID _SEMICOLON

   13 statement_list: ε
   14               | statement_list statement

   15 statement: compound_statement
   16          | assignment_statement
   17          | if_statement
   18          | return_statement
   19          | for_statement

   20 @3: ε

   21 $@4: ε

   22 $@5: ε

   23 for_statement: _FOR @3 _LPAREN _ID _ASSIGN literal $@4 _SEMICOLON rel_exp $@5 _SEMICOLON _ID _INC _RPAREN statement

   24 compound_statement: _LBRACKET statement_list _RBRACKET

   25 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   26 num_exp: exp
   27        | num_exp _AROP exp

   28 exp: literal
   29    | _ID
   30    | _AMPERSAND _ID
   31    | _ASTERISK _ID
   32    | function_call
   33    | _LPAREN num_exp _RPAREN

   34 literal: _INT_NUMBER
   35        | _UINT_NUMBER

   36 $@6: ε

   37 function_call: _ID $@6 _LPAREN argument _RPAREN

   38 argument: ε
   39         | num_exp

   40 if_statement: if_part
   41             | if_part _ELSE statement

   42 @7: ε

   43 $@8: ε

   44 if_part: _IF _LPAREN @7 rel_exp $@8 _RPAREN statement

   45 rel_exp: num_exp _RELOP num_exp

   46 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 5 7 12
    _IF (259) 44
    _ELSE (260) 41
    _FOR (261) 23
    _INC (262) 23
    _RETURN (263) 46
    _ID <s> (264) 5 7 12 23 25 29 30 31 37
    _INT_NUMBER <s> (265) 34
    _UINT_NUMBER <s> (266) 35
    _LPAREN (267) 5 23 33 37 44
    _RPAREN (268) 5 23 33 37 44
    _LBRACKET (269) 9 24
    _RBRACKET (270) 9 24
    _ASSIGN (271) 23 25
    _SEMICOLON (272) 12 23 25 46
    _AROP <i> (273) 27
    _RELOP <i> (274) 45
    ONLY_IF (275)
    _AMPERSAND (276) 30
    _ASTERISK (277) 31


Nonterminals, with rules where they appear

    $accept (23)
        on left: 0
    program (24)
        on left: 1
        on right: 0
    function_list (25)
        on left: 2 3
        on right: 1 3
    function (26)
        on left: 5
        on right: 2 3
    $@1 (27)
        on left: 4
        on right: 5
    parameter (28)
        on left: 6 7
        on right: 5
    body (29)
        on left: 9
        on right: 5
    $@2 (30)
        on left: 8
        on right: 9
    variable_list (31)
        on left: 10 11
        on right: 9 11
    variable (32)
        on left: 12
        on right: 11
    statement_list (33)
        on left: 13 14
        on right: 9 14 24
    statement (34)
        on left: 15 16 17 18 19
        on right: 14 23 41 44
    for_statement (35)
        on left: 23
        on right: 19
    @3 (36)
        on left: 20
        on right: 23
    $@4 (37)
        on left: 21
        on right: 23
    $@5 (38)
        on left: 22
        on right: 23
    compound_statement (39)
        on left: 24
        on right: 15
    assignment_statement (40)
        on left: 25
        on right: 16
    num_exp <i> (41)
        on left: 26 27
        on right: 25 27 33 39 45 46
    exp <i> (42)
        on left: 28 29 30 31 32 33
        on right: 26 27
    literal <i> (43)
        on left: 34 35
        on right: 23 28
    function_call <i> (44)
        on left: 37
        on right: 32
    $@6 (45)
        on left: 36
        on right: 37
    argument <i> (46)
        on left: 38 39
        on right: 37
    if_statement (47)
        on left: 40 41
        on right: 17
    if_part <i> (48)
        on left: 44
        on right: 40 41
    @7 (49)
        on left: 42
        on right: 44
    $@8 (50)
        on left: 43
        on right: 44
    rel_exp <i> (51)
        on left: 45
        on right: 23 44
    return_statement (52)
        on left: 46
        on right: 18


State 0

    0 $accept: • program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE • _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program • $end

    $end  shift, and go to state 6


State 3

    1 program: function_list •
    3 function_list: function_list • function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function •

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID • $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end •

    $default  accept


State 7

    3 function_list: function_list function •

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 • _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN • parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE • _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter • _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID •

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN • body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    9 body: _LBRACKET • variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 10 (variable_list)

    variable_list  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body •

    $default  reduce using rule 5 (function)


State 16

    9 body: _LBRACKET variable_list • $@2 statement_list _RBRACKET
   11 variable_list: variable_list • variable

    _TYPE  shift, and go to state 17

    $default  reduce using rule 8 ($@2)

    $@2       go to state 18
    variable  go to state 19


State 17

   12 variable: _TYPE • _ID _SEMICOLON

    _ID  shift, and go to state 20


State 18

    9 body: _LBRACKET variable_list $@2 • statement_list _RBRACKET

    $default  reduce using rule 13 (statement_list)

    statement_list  go to state 21


State 19

   11 variable_list: variable_list variable •

    $default  reduce using rule 11 (variable_list)


State 20

   12 variable: _TYPE _ID • _SEMICOLON

    _SEMICOLON  shift, and go to state 22


State 21

    9 body: _LBRACKET variable_list $@2 statement_list • _RBRACKET
   14 statement_list: statement_list • statement

    _IF        shift, and go to state 23
    _FOR       shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _RBRACKET  shift, and go to state 28

    statement             go to state 29
    for_statement         go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    if_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 22

   12 variable: _TYPE _ID _SEMICOLON •

    $default  reduce using rule 12 (variable)


State 23

   44 if_part: _IF • _LPAREN @7 rel_exp $@8 _RPAREN statement

    _LPAREN  shift, and go to state 36


State 24

   23 for_statement: _FOR • @3 _LPAREN _ID _ASSIGN literal $@4 _SEMICOLON rel_exp $@5 _SEMICOLON _ID _INC _RPAREN statement

    $default  reduce using rule 20 (@3)

    @3  go to state 37


State 25

   46 return_statement: _RETURN • num_exp _SEMICOLON

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41
    _AMPERSAND    shift, and go to state 42
    _ASTERISK     shift, and go to state 43

    num_exp        go to state 44
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47


State 26

   25 assignment_statement: _ID • _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 48


State 27

   24 compound_statement: _LBRACKET • statement_list _RBRACKET

    $default  reduce using rule 13 (statement_list)

    statement_list  go to state 49


State 28

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET •

    $default  reduce using rule 9 (body)


State 29

   14 statement_list: statement_list statement •

    $default  reduce using rule 14 (statement_list)


State 30

   19 statement: for_statement •

    $default  reduce using rule 19 (statement)


State 31

   15 statement: compound_statement •

    $default  reduce using rule 15 (statement)


State 32

   16 statement: assignment_statement •

    $default  reduce using rule 16 (statement)


State 33

   17 statement: if_statement •

    $default  reduce using rule 17 (statement)


State 34

   40 if_statement: if_part •
   41             | if_part • _ELSE statement

    _ELSE  shift, and go to state 50

    $default  reduce using rule 40 (if_statement)


State 35

   18 statement: return_statement •

    $default  reduce using rule 18 (statement)


State 36

   44 if_part: _IF _LPAREN • @7 rel_exp $@8 _RPAREN statement

    $default  reduce using rule 42 (@7)

    @7  go to state 51


State 37

   23 for_statement: _FOR @3 • _LPAREN _ID _ASSIGN literal $@4 _SEMICOLON rel_exp $@5 _SEMICOLON _ID _INC _RPAREN statement

    _LPAREN  shift, and go to state 52


State 38

   29 exp: _ID •
   37 function_call: _ID • $@6 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 36 ($@6)
    $default  reduce using rule 29 (exp)

    $@6  go to state 53


State 39

   34 literal: _INT_NUMBER •

    $default  reduce using rule 34 (literal)


State 40

   35 literal: _UINT_NUMBER •

    $default  reduce using rule 35 (literal)


State 41

   33 exp: _LPAREN • num_exp _RPAREN

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41
    _AMPERSAND    shift, and go to state 42
    _ASTERISK     shift, and go to state 43

    num_exp        go to state 54
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47


State 42

   30 exp: _AMPERSAND • _ID

    _ID  shift, and go to state 55


State 43

   31 exp: _ASTERISK • _ID

    _ID  shift, and go to state 56


State 44

   27 num_exp: num_exp • _AROP exp
   46 return_statement: _RETURN num_exp • _SEMICOLON

    _SEMICOLON  shift, and go to state 57
    _AROP       shift, and go to state 58


State 45

   26 num_exp: exp •

    $default  reduce using rule 26 (num_exp)


State 46

   28 exp: literal •

    $default  reduce using rule 28 (exp)


State 47

   32 exp: function_call •

    $default  reduce using rule 32 (exp)


State 48

   25 assignment_statement: _ID _ASSIGN • num_exp _SEMICOLON

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41
    _AMPERSAND    shift, and go to state 42
    _ASTERISK     shift, and go to state 43

    num_exp        go to state 59
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47


State 49

   14 statement_list: statement_list • statement
   24 compound_statement: _LBRACKET statement_list • _RBRACKET

    _IF        shift, and go to state 23
    _FOR       shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _RBRACKET  shift, and go to state 60

    statement             go to state 29
    for_statement         go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    if_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 50

   41 if_statement: if_part _ELSE • statement

    _IF        shift, and go to state 23
    _FOR       shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27

    statement             go to state 61
    for_statement         go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    if_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 51

   44 if_part: _IF _LPAREN @7 • rel_exp $@8 _RPAREN statement

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41
    _AMPERSAND    shift, and go to state 42
    _ASTERISK     shift, and go to state 43

    num_exp        go to state 62
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47
    rel_exp        go to state 63


State 52

   23 for_statement: _FOR @3 _LPAREN • _ID _ASSIGN literal $@4 _SEMICOLON rel_exp $@5 _SEMICOLON _ID _INC _RPAREN statement

    _ID  shift, and go to state 64


State 53

   37 function_call: _ID $@6 • _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 65


State 54

   27 num_exp: num_exp • _AROP exp
   33 exp: _LPAREN num_exp • _RPAREN

    _RPAREN  shift, and go to state 66
    _AROP    shift, and go to state 58


State 55

   30 exp: _AMPERSAND _ID •

    $default  reduce using rule 30 (exp)


State 56

   31 exp: _ASTERISK _ID •

    $default  reduce using rule 31 (exp)


State 57

   46 return_statement: _RETURN num_exp _SEMICOLON •

    $default  reduce using rule 46 (return_statement)


State 58

   27 num_exp: num_exp _AROP • exp

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41
    _AMPERSAND    shift, and go to state 42
    _ASTERISK     shift, and go to state 43

    exp            go to state 67
    literal        go to state 46
    function_call  go to state 47


State 59

   25 assignment_statement: _ID _ASSIGN num_exp • _SEMICOLON
   27 num_exp: num_exp • _AROP exp

    _SEMICOLON  shift, and go to state 68
    _AROP       shift, and go to state 58


State 60

   24 compound_statement: _LBRACKET statement_list _RBRACKET •

    $default  reduce using rule 24 (compound_statement)


State 61

   41 if_statement: if_part _ELSE statement •

    $default  reduce using rule 41 (if_statement)


State 62

   27 num_exp: num_exp • _AROP exp
   45 rel_exp: num_exp • _RELOP num_exp

    _AROP   shift, and go to state 58
    _RELOP  shift, and go to state 69


State 63

   44 if_part: _IF _LPAREN @7 rel_exp • $@8 _RPAREN statement

    $default  reduce using rule 43 ($@8)

    $@8  go to state 70


State 64

   23 for_statement: _FOR @3 _LPAREN _ID • _ASSIGN literal $@4 _SEMICOLON rel_exp $@5 _SEMICOLON _ID _INC _RPAREN statement

    _ASSIGN  shift, and go to state 71


State 65

   37 function_call: _ID $@6 _LPAREN • argument _RPAREN

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41
    _AMPERSAND    shift, and go to state 42
    _ASTERISK     shift, and go to state 43

    $default  reduce using rule 38 (argument)

    num_exp        go to state 72
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47
    argument       go to state 73


State 66

   33 exp: _LPAREN num_exp _RPAREN •

    $default  reduce using rule 33 (exp)


State 67

   27 num_exp: num_exp _AROP exp •

    $default  reduce using rule 27 (num_exp)


State 68

   25 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON •

    $default  reduce using rule 25 (assignment_statement)


State 69

   45 rel_exp: num_exp _RELOP • num_exp

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41
    _AMPERSAND    shift, and go to state 42
    _ASTERISK     shift, and go to state 43

    num_exp        go to state 74
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47


State 70

   44 if_part: _IF _LPAREN @7 rel_exp $@8 • _RPAREN statement

    _RPAREN  shift, and go to state 75


State 71

   23 for_statement: _FOR @3 _LPAREN _ID _ASSIGN • literal $@4 _SEMICOLON rel_exp $@5 _SEMICOLON _ID _INC _RPAREN statement

    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40

    literal  go to state 76


State 72

   27 num_exp: num_exp • _AROP exp
   39 argument: num_exp •

    _AROP  shift, and go to state 58

    $default  reduce using rule 39 (argument)


State 73

   37 function_call: _ID $@6 _LPAREN argument • _RPAREN

    _RPAREN  shift, and go to state 77


State 74

   27 num_exp: num_exp • _AROP exp
   45 rel_exp: num_exp _RELOP num_exp •

    _AROP  shift, and go to state 58

    $default  reduce using rule 45 (rel_exp)


State 75

   44 if_part: _IF _LPAREN @7 rel_exp $@8 _RPAREN • statement

    _IF        shift, and go to state 23
    _FOR       shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27

    statement             go to state 78
    for_statement         go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    if_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 76

   23 for_statement: _FOR @3 _LPAREN _ID _ASSIGN literal • $@4 _SEMICOLON rel_exp $@5 _SEMICOLON _ID _INC _RPAREN statement

    $default  reduce using rule 21 ($@4)

    $@4  go to state 79


State 77

   37 function_call: _ID $@6 _LPAREN argument _RPAREN •

    $default  reduce using rule 37 (function_call)


State 78

   44 if_part: _IF _LPAREN @7 rel_exp $@8 _RPAREN statement •

    $default  reduce using rule 44 (if_part)


State 79

   23 for_statement: _FOR @3 _LPAREN _ID _ASSIGN literal $@4 • _SEMICOLON rel_exp $@5 _SEMICOLON _ID _INC _RPAREN statement

    _SEMICOLON  shift, and go to state 80


State 80

   23 for_statement: _FOR @3 _LPAREN _ID _ASSIGN literal $@4 _SEMICOLON • rel_exp $@5 _SEMICOLON _ID _INC _RPAREN statement

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41
    _AMPERSAND    shift, and go to state 42
    _ASTERISK     shift, and go to state 43

    num_exp        go to state 62
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47
    rel_exp        go to state 81


State 81

   23 for_statement: _FOR @3 _LPAREN _ID _ASSIGN literal $@4 _SEMICOLON rel_exp • $@5 _SEMICOLON _ID _INC _RPAREN statement

    $default  reduce using rule 22 ($@5)

    $@5  go to state 82


State 82

   23 for_statement: _FOR @3 _LPAREN _ID _ASSIGN literal $@4 _SEMICOLON rel_exp $@5 • _SEMICOLON _ID _INC _RPAREN statement

    _SEMICOLON  shift, and go to state 83


State 83

   23 for_statement: _FOR @3 _LPAREN _ID _ASSIGN literal $@4 _SEMICOLON rel_exp $@5 _SEMICOLON • _ID _INC _RPAREN statement

    _ID  shift, and go to state 84


State 84

   23 for_statement: _FOR @3 _LPAREN _ID _ASSIGN literal $@4 _SEMICOLON rel_exp $@5 _SEMICOLON _ID • _INC _RPAREN statement

    _INC  shift, and go to state 85


State 85

   23 for_statement: _FOR @3 _LPAREN _ID _ASSIGN literal $@4 _SEMICOLON rel_exp $@5 _SEMICOLON _ID _INC • _RPAREN statement

    _RPAREN  shift, and go to state 86


State 86

   23 for_statement: _FOR @3 _LPAREN _ID _ASSIGN literal $@4 _SEMICOLON rel_exp $@5 _SEMICOLON _ID _INC _RPAREN • statement

    _IF        shift, and go to state 23
    _FOR       shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27

    statement             go to state 87
    for_statement         go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    if_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 87

   23 for_statement: _FOR @3 _LPAREN _ID _ASSIGN literal $@4 _SEMICOLON rel_exp $@5 _SEMICOLON _ID _INC _RPAREN statement •

    $default  reduce using rule 23 (for_statement)
